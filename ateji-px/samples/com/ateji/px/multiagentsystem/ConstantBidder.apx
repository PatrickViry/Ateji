/****************************
 * Copyright (c) 2009 ATEJI *
 * All rights reserved.     *
 ****************************/
package com.ateji.px.multiagentsystem;

import apx.lang.IChan;
import apx.lang.Signal;

/**
 * The strategy of ConstantBidder is to offer a fixed amount and
 * wait until the end of auction.
 */
public class ConstantBidder extends Bidder
{

	@Override
	public void run()
	{
		boolean exit = false;
		while(true) {			
			// The agent will react to every interaction it has with the environment:
			//   - it bids as soon as possible,
			//   - it quits when a higher bid has been made, and
			//   - it returns when it wins or when it quits.
			select {
			when ( if (!exit)) bidActuator ! myBid:;
			when bidSensor ? int bid: if (bid > myBid) exit = true;
			when ( if (exit)) quitAuctionActuator !: return;
			when winAuctionSensor? : {
				System.out.println(name+" wins");
				return;
			}
			}
		}
	}

	private final int myBid;

	public ConstantBidder(String name, int myBid,
			IChan<Integer> bidSensor, Signal winAuctionSensor,
			IChan<Integer> bidActuator, Signal quitAuctionActuator)
	{
		super(name, bidSensor, winAuctionSensor, bidActuator, quitAuctionActuator);
		this.myBid = myBid;
	}

}
